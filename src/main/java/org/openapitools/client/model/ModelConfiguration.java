/*
 * Access Analyzer
 * <p>Identity and Access Management Access Analyzer helps identify potential resource-access risks by enabling you to identify any policies that grant access to an external principal. It does this by using logic-based reasoning to analyze resource-based policies in your Amazon Web Services environment. An external principal can be another Amazon Web Services account, a root user, an IAM user or role, a federated user, an Amazon Web Services service, or an anonymous user. You can also use IAM Access Analyzer to preview and validate public and cross-account access to your resources before deploying permissions changes. This guide describes the Identity and Access Management Access Analyzer operations that you can call programmatically. For general information about IAM Access Analyzer, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html\">Identity and Access Management Access Analyzer</a> in the <b>IAM User Guide</b>.</p> <p>To start using IAM Access Analyzer, you first need to create an analyzer.</p>
 *
 * The version of the OpenAPI document: 2019-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConfigurationEbsSnapshot;
import org.openapitools.client.model.ConfigurationEcrRepository;
import org.openapitools.client.model.ConfigurationEfsFileSystem;
import org.openapitools.client.model.ConfigurationIamRole;
import org.openapitools.client.model.ConfigurationKmsKey;
import org.openapitools.client.model.ConfigurationRdsDbClusterSnapshot;
import org.openapitools.client.model.ConfigurationRdsDbSnapshot;
import org.openapitools.client.model.ConfigurationS3Bucket;
import org.openapitools.client.model.ConfigurationSecretsManagerSecret;
import org.openapitools.client.model.ConfigurationSnsTopic;
import org.openapitools.client.model.ConfigurationSqsQueue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Access control configuration structures for your resource. You specify the configuration as a type-value pair. You can specify only one type of access control configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:03:05.234024+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class ModelConfiguration {
  public static final String SERIALIZED_NAME_EBS_SNAPSHOT = "ebsSnapshot";
  @SerializedName(SERIALIZED_NAME_EBS_SNAPSHOT)
  @javax.annotation.Nullable
  private ConfigurationEbsSnapshot ebsSnapshot;

  public static final String SERIALIZED_NAME_ECR_REPOSITORY = "ecrRepository";
  @SerializedName(SERIALIZED_NAME_ECR_REPOSITORY)
  @javax.annotation.Nullable
  private ConfigurationEcrRepository ecrRepository;

  public static final String SERIALIZED_NAME_IAM_ROLE = "iamRole";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE)
  @javax.annotation.Nullable
  private ConfigurationIamRole iamRole;

  public static final String SERIALIZED_NAME_EFS_FILE_SYSTEM = "efsFileSystem";
  @SerializedName(SERIALIZED_NAME_EFS_FILE_SYSTEM)
  @javax.annotation.Nullable
  private ConfigurationEfsFileSystem efsFileSystem;

  public static final String SERIALIZED_NAME_KMS_KEY = "kmsKey";
  @SerializedName(SERIALIZED_NAME_KMS_KEY)
  @javax.annotation.Nullable
  private ConfigurationKmsKey kmsKey;

  public static final String SERIALIZED_NAME_RDS_DB_CLUSTER_SNAPSHOT = "rdsDbClusterSnapshot";
  @SerializedName(SERIALIZED_NAME_RDS_DB_CLUSTER_SNAPSHOT)
  @javax.annotation.Nullable
  private ConfigurationRdsDbClusterSnapshot rdsDbClusterSnapshot;

  public static final String SERIALIZED_NAME_RDS_DB_SNAPSHOT = "rdsDbSnapshot";
  @SerializedName(SERIALIZED_NAME_RDS_DB_SNAPSHOT)
  @javax.annotation.Nullable
  private ConfigurationRdsDbSnapshot rdsDbSnapshot;

  public static final String SERIALIZED_NAME_SECRETS_MANAGER_SECRET = "secretsManagerSecret";
  @SerializedName(SERIALIZED_NAME_SECRETS_MANAGER_SECRET)
  @javax.annotation.Nullable
  private ConfigurationSecretsManagerSecret secretsManagerSecret;

  public static final String SERIALIZED_NAME_S3_BUCKET = "s3Bucket";
  @SerializedName(SERIALIZED_NAME_S3_BUCKET)
  @javax.annotation.Nullable
  private ConfigurationS3Bucket s3Bucket;

  public static final String SERIALIZED_NAME_SNS_TOPIC = "snsTopic";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC)
  @javax.annotation.Nullable
  private ConfigurationSnsTopic snsTopic;

  public static final String SERIALIZED_NAME_SQS_QUEUE = "sqsQueue";
  @SerializedName(SERIALIZED_NAME_SQS_QUEUE)
  @javax.annotation.Nullable
  private ConfigurationSqsQueue sqsQueue;

  public ModelConfiguration() {
  }

  public ModelConfiguration ebsSnapshot(@javax.annotation.Nullable ConfigurationEbsSnapshot ebsSnapshot) {
    this.ebsSnapshot = ebsSnapshot;
    return this;
  }

  /**
   * Get ebsSnapshot
   * @return ebsSnapshot
   */
  @javax.annotation.Nullable
  public ConfigurationEbsSnapshot getEbsSnapshot() {
    return ebsSnapshot;
  }

  public void setEbsSnapshot(@javax.annotation.Nullable ConfigurationEbsSnapshot ebsSnapshot) {
    this.ebsSnapshot = ebsSnapshot;
  }


  public ModelConfiguration ecrRepository(@javax.annotation.Nullable ConfigurationEcrRepository ecrRepository) {
    this.ecrRepository = ecrRepository;
    return this;
  }

  /**
   * Get ecrRepository
   * @return ecrRepository
   */
  @javax.annotation.Nullable
  public ConfigurationEcrRepository getEcrRepository() {
    return ecrRepository;
  }

  public void setEcrRepository(@javax.annotation.Nullable ConfigurationEcrRepository ecrRepository) {
    this.ecrRepository = ecrRepository;
  }


  public ModelConfiguration iamRole(@javax.annotation.Nullable ConfigurationIamRole iamRole) {
    this.iamRole = iamRole;
    return this;
  }

  /**
   * Get iamRole
   * @return iamRole
   */
  @javax.annotation.Nullable
  public ConfigurationIamRole getIamRole() {
    return iamRole;
  }

  public void setIamRole(@javax.annotation.Nullable ConfigurationIamRole iamRole) {
    this.iamRole = iamRole;
  }


  public ModelConfiguration efsFileSystem(@javax.annotation.Nullable ConfigurationEfsFileSystem efsFileSystem) {
    this.efsFileSystem = efsFileSystem;
    return this;
  }

  /**
   * Get efsFileSystem
   * @return efsFileSystem
   */
  @javax.annotation.Nullable
  public ConfigurationEfsFileSystem getEfsFileSystem() {
    return efsFileSystem;
  }

  public void setEfsFileSystem(@javax.annotation.Nullable ConfigurationEfsFileSystem efsFileSystem) {
    this.efsFileSystem = efsFileSystem;
  }


  public ModelConfiguration kmsKey(@javax.annotation.Nullable ConfigurationKmsKey kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   * Get kmsKey
   * @return kmsKey
   */
  @javax.annotation.Nullable
  public ConfigurationKmsKey getKmsKey() {
    return kmsKey;
  }

  public void setKmsKey(@javax.annotation.Nullable ConfigurationKmsKey kmsKey) {
    this.kmsKey = kmsKey;
  }


  public ModelConfiguration rdsDbClusterSnapshot(@javax.annotation.Nullable ConfigurationRdsDbClusterSnapshot rdsDbClusterSnapshot) {
    this.rdsDbClusterSnapshot = rdsDbClusterSnapshot;
    return this;
  }

  /**
   * Get rdsDbClusterSnapshot
   * @return rdsDbClusterSnapshot
   */
  @javax.annotation.Nullable
  public ConfigurationRdsDbClusterSnapshot getRdsDbClusterSnapshot() {
    return rdsDbClusterSnapshot;
  }

  public void setRdsDbClusterSnapshot(@javax.annotation.Nullable ConfigurationRdsDbClusterSnapshot rdsDbClusterSnapshot) {
    this.rdsDbClusterSnapshot = rdsDbClusterSnapshot;
  }


  public ModelConfiguration rdsDbSnapshot(@javax.annotation.Nullable ConfigurationRdsDbSnapshot rdsDbSnapshot) {
    this.rdsDbSnapshot = rdsDbSnapshot;
    return this;
  }

  /**
   * Get rdsDbSnapshot
   * @return rdsDbSnapshot
   */
  @javax.annotation.Nullable
  public ConfigurationRdsDbSnapshot getRdsDbSnapshot() {
    return rdsDbSnapshot;
  }

  public void setRdsDbSnapshot(@javax.annotation.Nullable ConfigurationRdsDbSnapshot rdsDbSnapshot) {
    this.rdsDbSnapshot = rdsDbSnapshot;
  }


  public ModelConfiguration secretsManagerSecret(@javax.annotation.Nullable ConfigurationSecretsManagerSecret secretsManagerSecret) {
    this.secretsManagerSecret = secretsManagerSecret;
    return this;
  }

  /**
   * Get secretsManagerSecret
   * @return secretsManagerSecret
   */
  @javax.annotation.Nullable
  public ConfigurationSecretsManagerSecret getSecretsManagerSecret() {
    return secretsManagerSecret;
  }

  public void setSecretsManagerSecret(@javax.annotation.Nullable ConfigurationSecretsManagerSecret secretsManagerSecret) {
    this.secretsManagerSecret = secretsManagerSecret;
  }


  public ModelConfiguration s3Bucket(@javax.annotation.Nullable ConfigurationS3Bucket s3Bucket) {
    this.s3Bucket = s3Bucket;
    return this;
  }

  /**
   * Get s3Bucket
   * @return s3Bucket
   */
  @javax.annotation.Nullable
  public ConfigurationS3Bucket getS3Bucket() {
    return s3Bucket;
  }

  public void setS3Bucket(@javax.annotation.Nullable ConfigurationS3Bucket s3Bucket) {
    this.s3Bucket = s3Bucket;
  }


  public ModelConfiguration snsTopic(@javax.annotation.Nullable ConfigurationSnsTopic snsTopic) {
    this.snsTopic = snsTopic;
    return this;
  }

  /**
   * Get snsTopic
   * @return snsTopic
   */
  @javax.annotation.Nullable
  public ConfigurationSnsTopic getSnsTopic() {
    return snsTopic;
  }

  public void setSnsTopic(@javax.annotation.Nullable ConfigurationSnsTopic snsTopic) {
    this.snsTopic = snsTopic;
  }


  public ModelConfiguration sqsQueue(@javax.annotation.Nullable ConfigurationSqsQueue sqsQueue) {
    this.sqsQueue = sqsQueue;
    return this;
  }

  /**
   * Get sqsQueue
   * @return sqsQueue
   */
  @javax.annotation.Nullable
  public ConfigurationSqsQueue getSqsQueue() {
    return sqsQueue;
  }

  public void setSqsQueue(@javax.annotation.Nullable ConfigurationSqsQueue sqsQueue) {
    this.sqsQueue = sqsQueue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelConfiguration _configuration = (ModelConfiguration) o;
    return Objects.equals(this.ebsSnapshot, _configuration.ebsSnapshot) &&
        Objects.equals(this.ecrRepository, _configuration.ecrRepository) &&
        Objects.equals(this.iamRole, _configuration.iamRole) &&
        Objects.equals(this.efsFileSystem, _configuration.efsFileSystem) &&
        Objects.equals(this.kmsKey, _configuration.kmsKey) &&
        Objects.equals(this.rdsDbClusterSnapshot, _configuration.rdsDbClusterSnapshot) &&
        Objects.equals(this.rdsDbSnapshot, _configuration.rdsDbSnapshot) &&
        Objects.equals(this.secretsManagerSecret, _configuration.secretsManagerSecret) &&
        Objects.equals(this.s3Bucket, _configuration.s3Bucket) &&
        Objects.equals(this.snsTopic, _configuration.snsTopic) &&
        Objects.equals(this.sqsQueue, _configuration.sqsQueue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ebsSnapshot, ecrRepository, iamRole, efsFileSystem, kmsKey, rdsDbClusterSnapshot, rdsDbSnapshot, secretsManagerSecret, s3Bucket, snsTopic, sqsQueue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelConfiguration {\n");
    sb.append("    ebsSnapshot: ").append(toIndentedString(ebsSnapshot)).append("\n");
    sb.append("    ecrRepository: ").append(toIndentedString(ecrRepository)).append("\n");
    sb.append("    iamRole: ").append(toIndentedString(iamRole)).append("\n");
    sb.append("    efsFileSystem: ").append(toIndentedString(efsFileSystem)).append("\n");
    sb.append("    kmsKey: ").append(toIndentedString(kmsKey)).append("\n");
    sb.append("    rdsDbClusterSnapshot: ").append(toIndentedString(rdsDbClusterSnapshot)).append("\n");
    sb.append("    rdsDbSnapshot: ").append(toIndentedString(rdsDbSnapshot)).append("\n");
    sb.append("    secretsManagerSecret: ").append(toIndentedString(secretsManagerSecret)).append("\n");
    sb.append("    s3Bucket: ").append(toIndentedString(s3Bucket)).append("\n");
    sb.append("    snsTopic: ").append(toIndentedString(snsTopic)).append("\n");
    sb.append("    sqsQueue: ").append(toIndentedString(sqsQueue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ebsSnapshot");
    openapiFields.add("ecrRepository");
    openapiFields.add("iamRole");
    openapiFields.add("efsFileSystem");
    openapiFields.add("kmsKey");
    openapiFields.add("rdsDbClusterSnapshot");
    openapiFields.add("rdsDbSnapshot");
    openapiFields.add("secretsManagerSecret");
    openapiFields.add("s3Bucket");
    openapiFields.add("snsTopic");
    openapiFields.add("sqsQueue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelConfiguration is not found in the empty JSON string", ModelConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ebsSnapshot`
      if (jsonObj.get("ebsSnapshot") != null && !jsonObj.get("ebsSnapshot").isJsonNull()) {
        ConfigurationEbsSnapshot.validateJsonElement(jsonObj.get("ebsSnapshot"));
      }
      // validate the optional field `ecrRepository`
      if (jsonObj.get("ecrRepository") != null && !jsonObj.get("ecrRepository").isJsonNull()) {
        ConfigurationEcrRepository.validateJsonElement(jsonObj.get("ecrRepository"));
      }
      // validate the optional field `iamRole`
      if (jsonObj.get("iamRole") != null && !jsonObj.get("iamRole").isJsonNull()) {
        ConfigurationIamRole.validateJsonElement(jsonObj.get("iamRole"));
      }
      // validate the optional field `efsFileSystem`
      if (jsonObj.get("efsFileSystem") != null && !jsonObj.get("efsFileSystem").isJsonNull()) {
        ConfigurationEfsFileSystem.validateJsonElement(jsonObj.get("efsFileSystem"));
      }
      // validate the optional field `kmsKey`
      if (jsonObj.get("kmsKey") != null && !jsonObj.get("kmsKey").isJsonNull()) {
        ConfigurationKmsKey.validateJsonElement(jsonObj.get("kmsKey"));
      }
      // validate the optional field `rdsDbClusterSnapshot`
      if (jsonObj.get("rdsDbClusterSnapshot") != null && !jsonObj.get("rdsDbClusterSnapshot").isJsonNull()) {
        ConfigurationRdsDbClusterSnapshot.validateJsonElement(jsonObj.get("rdsDbClusterSnapshot"));
      }
      // validate the optional field `rdsDbSnapshot`
      if (jsonObj.get("rdsDbSnapshot") != null && !jsonObj.get("rdsDbSnapshot").isJsonNull()) {
        ConfigurationRdsDbSnapshot.validateJsonElement(jsonObj.get("rdsDbSnapshot"));
      }
      // validate the optional field `secretsManagerSecret`
      if (jsonObj.get("secretsManagerSecret") != null && !jsonObj.get("secretsManagerSecret").isJsonNull()) {
        ConfigurationSecretsManagerSecret.validateJsonElement(jsonObj.get("secretsManagerSecret"));
      }
      // validate the optional field `s3Bucket`
      if (jsonObj.get("s3Bucket") != null && !jsonObj.get("s3Bucket").isJsonNull()) {
        ConfigurationS3Bucket.validateJsonElement(jsonObj.get("s3Bucket"));
      }
      // validate the optional field `snsTopic`
      if (jsonObj.get("snsTopic") != null && !jsonObj.get("snsTopic").isJsonNull()) {
        ConfigurationSnsTopic.validateJsonElement(jsonObj.get("snsTopic"));
      }
      // validate the optional field `sqsQueue`
      if (jsonObj.get("sqsQueue") != null && !jsonObj.get("sqsQueue").isJsonNull()) {
        ConfigurationSqsQueue.validateJsonElement(jsonObj.get("sqsQueue"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelConfiguration>() {
           @Override
           public void write(JsonWriter out, ModelConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelConfiguration
   * @throws IOException if the JSON string is invalid with respect to ModelConfiguration
   */
  public static ModelConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelConfiguration.class);
  }

  /**
   * Convert an instance of ModelConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

